version: "3" # docker compose 버전입니다.
services: # 컨테이너 혹은 서비스를 정의하는 구간입니다.
  opensearch-node1: # 컨테이너 호스트 네임입니다.
    image: opensearchproject/opensearch:latest # 가장 최신 이미지를 가져옵니다.
    container_name: opensearch-node1 # 컨테이너 이름을 정의합니다. 만약 정의하지 않으면, 프로젝트이름_서비스이름_인덱스 형태의 이름을 가집니다.
    environment: # 환경 변수를 설정합니다.
      - cluster.name=opensearch-cluster # 클러스터 이름을 정의합니다.
      - node.name=opensearch-node1 # 컨테이너에서 실행할 노드 이름을 정의합니다.
      - discovery.seed_hosts=opensearch-node1,opensearch-node2 # 클러스터를 탐색 시 찾을 노드 이름입니다.
      - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2 # Nodes eligible to serve as cluster manager
      - bootstrap.memory_lock=true # Disable JVM heap memory swapping
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # Set min and max JVM heap sizes to at least 50% of system RAM
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    volumes:
      - opensearch-data1:/usr/share/opensearch/data # Creates volume called opensearch-data1 and mounts it to the container
    ports:
      - 9200:9200 # REST API
      - 9600:9600 # Performance Analyzer
    networks:
      - opensearch-net # All of the containers will join the same Docker bridge network
  opensearch-node2:
    image: opensearchproject/opensearch:latest # This should be the same image used for opensearch-node1 to avoid issues
    container_name: opensearch-node2
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch-node2
      - discovery.seed_hosts=opensearch-node1,opensearch-node2
      - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch-data2:/usr/share/opensearch/data
    networks:
      - opensearch-net
  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:latest # Make sure the version of opensearch-dashboards matches the version of opensearch installed on other nodes
    container_name: opensearch-dashboards
    ports:
      - 5601:5601 # Map host port 5601 to container port 5601
    expose:
      - "5601" # Expose port 5601 for web access to OpenSearch Dashboards
    environment:
      OPENSEARCH_HOSTS: '["https://opensearch-node1:9200","https://opensearch-node2:9200"]' # Define the OpenSearch nodes that OpenSearch Dashboards will query
    networks:
      - opensearch-net
  express-app:
    build: .
    container_name: express-app
    ports:
      - 3000:3000
    environment:
      - NODE_ENV=development
      - OPENSEARCH_URL=https://opensearch-node1:9200,https://opensearch-node2:9200
      - OPENSEARCH_USERNAME=admin
      - OPENSEARCH_PASSWORD=admin
    depends_on:
      - opensearch-node1
      - opensearch-node2
    networks:
      - opensearch-net

volumes:
  opensearch-data1:
  opensearch-data2:

networks:
  opensearch-net:
